// <auto-generated />
using System;
using Knight.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Knight.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241012231528_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Knight.Domain.Models.Knight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("KeyAttribute")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Knights");
                });

            modelBuilder.Entity("Knight.Domain.Models.Knight", b =>
                {
                    b.OwnsOne("Knight.Domain.Models.Attributes", "Attributes", b1 =>
                        {
                            b1.Property<int>("KnightId")
                                .HasColumnType("integer");

                            b1.Property<int>("Charisma")
                                .HasColumnType("integer");

                            b1.Property<int>("Constitution")
                                .HasColumnType("integer");

                            b1.Property<int>("Dexterity")
                                .HasColumnType("integer");

                            b1.Property<int>("Intelligence")
                                .HasColumnType("integer");

                            b1.Property<int>("Strength")
                                .HasColumnType("integer");

                            b1.Property<int>("Wisdom")
                                .HasColumnType("integer");

                            b1.HasKey("KnightId");

                            b1.ToTable("Knights");

                            b1.WithOwner()
                                .HasForeignKey("KnightId");
                        });

                    b.OwnsMany("Knight.Domain.Models.Weapon", "Weapons", b1 =>
                        {
                            b1.Property<int>("KnightId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Attr")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<bool>("Equipped")
                                .HasColumnType("boolean");

                            b1.Property<int>("Mod")
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("KnightId", "Id");

                            b1.ToTable("KnightWeapons", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("KnightId");
                        });

                    b.Navigation("Attributes")
                        .IsRequired();

                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
